<html>
	<head>
		<title>Project Bookworm - Book List</title>
		<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
		<link rel="stylesheet" href="http://assets.celinemarcelo.com/projectbookworm/style.css">

	</head>

	<body ng-app="app">
		<script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
		<script src = "http://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular-route.min.js"></script>
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
		<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
		<script src="http://assets.celinemarcelo.com/projectbookworm/ui-bootstrap-tpls-1.3.3.min.js"></script>
		<script src="http://assets.celinemarcelo.com/projectbookworm/ng-file-upload-all.min.js"></script>
		<script src="http://assets.celinemarcelo.com/projectbookworm/ng-file-upload-shim.min.js"></script>
		<script src="http://assets.celinemarcelo.com/projectbookworm/ng-file-upload.min.js"></script>

		<div ng-view></div>

		<div style="width: 70%; margin: auto;"> 
			<h1 align="center"> Book List </h1>
			<div style="position: relative" ng-controller="form">
				<!-- Trigger the modal with a button -->
				<div style="text-align: right">
					<button type="button" class="btn btn-success btn-lg" data-toggle="modal" data-target="#addBook">
						<small><span class="glyphicon glyphicon-plus" aria-hidden="true"></span></small>
						Add Book
					</button>
				</div>
				<!-- Modal -->
				<div id="addBook" class="modal fade" role="dialog">
					<div class="modal-dialog">
						<!-- Modal content-->
						<div class="overlay" ng-show="showSpinner">
							<div ng-show="showSpinner" align="center" class="spinner">
								<img src="http://assets.celinemarcelo.com/projectbookworm/ajax-loader.gif">
							</div>

						</div>
						<div class="modal-content">
							<div class="modal-header">
								<h4 class="modal-title">Add Book</h4>
							</div>
							<div class="modal-body">

								<form ng-hide="success || fail || exists" name="bookForm" novalidate>
									<div class="form-group">
										<label for="title">Title<span style="color: red">*</span></label>
										<input type="text" class="form-control" name="title" ng-model="title" uib-typeahead="book.title for book in books | filter:$viewValue | limitTo:3" required>

									</div>
									<div class="form-group">
										<label>Author<span style="color: red">*</span></label><br>

										<div style="float: left; width: 45%">
											<label for="firstName" style="font-weight: normal">First Name<span style="color: red">*</span></label><br>
											<input type="text" class="form-control" name="firstName" ng-model="firstName" uib-typeahead="author.firstName for author in authors | filter:$viewValue | limitTo:3" required>
										</div>
										<div style="float: right; width: 45%">
											<label for="lastName" style="font-weight: normal">Last Name<span style="color: red">*</span></label><br>
											<input type="text" class="form-control" name="lastName" ng-model="lastName" uib-typeahead="author.lastName for author in authors | filter:$viewValue | limitTo:3" required>
										</div>
									</div>
									
									<br><br><br>
									
									<div>
										<div class="form-group"  style="width: 45%; float: left">
											<label for="category">Category<span style="color: red">*</span></label>
											<!--<select ng-model="selectedCategory" ng-options="x.categoryName for x in categories"></select>-->
											<input type="text" class="form-control" ng-model="categoryName" name="categoryName" uib-typeahead="category.categoryName for category in categories | filter:$viewValue | limitTo:3" required>
										</div>
										<div class="form-group" style="width: 45%; float: right">
											<label for="language">Language<span style="color: red">*</span></label>
											<!--<select ng-model="selectedLanguage" ng-options="x.language for x in languages"></select>-->
											<input type="text" class="form-control" ng-model="language" name="language" uib-typeahead="language.language for language in languages | filter:$viewValue | limitTo:3" required>
										</div>
									</div>
									<div>
										<div class="form-group" style="width: 45%; float: left">
											<label for="releaseDate">Release Date</label>
											<input type="date" class="form-control" id="releaseDate" ng-model="releaseDate">
										</div>
										
										<div class="form-group" style="width: 45%; float: right">
												<label for="coverURL">Cover Image</label>
											     <input type="file" ngf-select ng-model="file" name="file" ngf-pattern="'image/*'" accept="image/*" ngf-max-size="10MB" ngf-resize="{width: 260, height: 400, quality: 1.0}"/>

										</div>
									</div>


								</form>

								
							</div>

							
							<div class="alert alert-success" ng-show="success">
								<span class="glyphicon glyphicon-ok-sign" aria-hidden="true"></span>

								<strong>Book successfully added!</strong>
							</div>

							<div class="alert alert-warning" ng-show="exists">
								<span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
								
								<strong>Book already exists!</strong>
							</div>

							<div class="alert alert-danger" ng-show="fail">
							  	<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>

								<strong>There has been a problem with the server.</strong>
							</div>

							<div class="alert alert-success" ng-show="coverSuccess">
								<span class="glyphicon glyphicon-ok-sign" aria-hidden="true"></span>

								<strong>Cover image successfully uploaded!</strong>
							</div>

							<div class="alert alert-danger" ng-show="coverFail">
							  	<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>

								<strong>Cover image upload failed.</strong>
							</div>


							<div class="modal-footer" style="margin-top: 20%;" ng-hide="success || fail || exists">
								<em><span style="float: left; color: red;">*required</span></em>

								<button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
								<button type="submit" class="btn btn-info" ng-click="submit($scope.file)" ng-disabled="bookForm.title.$invalid || bookForm.firstName.$invalid || bookForm.lastName.$invalid || bookForm.categoryName.$invalid || bookForm.language.$invalid">Submit</button>
							</div>


							<div class="modal-footer" style="margin-top: 20%;" ng-show="success || fail || exists">
								<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
								<button type="button" class="btn btn-warning" ng-click="success = 0; fail = 0; exists = 0; coverSuccess = 0; coverFail = 0;" >Back to form</button>
							</div>
						</div>
					</div>
				</div>
			</div>

			<br>

			<div ng-controller="bookList">

				<div ng-show="showSpinnerTable" align="center" class="spinner">
					<img src="http://assets.celinemarcelo.com/projectbookworm/ajax-loader.gif">
				</div>

				<div class="table-responsive" ng-hide="showSpinnerTable" ng-cloak>
					<table class="table table-striped">
			  			<thead>
			  				<th>Title</th>
			  				<th>Author</th>
			  				<th>Category</th>
			  			</thead>

			  			<tr ng-repeat="x in books | orderBy: 'title'" class="well">

			    			<td style="vertical-align: middle"><img style="height: 50%;" ng-src="http://assets.celinemarcelo.com/projectbookworm/covers/{{x.bookId}}.jpg" />
			    			<span>{{x.title}}</span></td>
			    			<td style="vertical-align: middle" get-author></td>
			    			<td style="vertical-align: middle" get-category></td>
			  			</tr>
					</table>
				</div>

			</div>

		</div>

		<script>
			var app = angular.module('app', ['ngRoute', 'ui.bootstrap', 'ngFileUpload']);
			app.config(['$routeProvider', function($routeProvider){
  				$routeProvider
  					.when("/", {
				      	templateUrl: "nav.htm"
				    });
			}]);

			app.controller('welcomeNav', function(){});

			app.controller('booksNav', function($scope){
				$scope.change = function(){
        			return {"color": "white" , "background-color": "#B5B5B5"};
    			}
			});

			app.controller('form', function($scope, $http, $q, Upload, $window) {


				$http.get("http://celinemarcelo.com:8004/v1/books").success(function(data) {
					$scope.books = data.books;
				});

				$http.get("http://celinemarcelo.com:8004/v1/authors").success(function(data) {
					$scope.authors = data.authors;
				});

				$http.get("http://celinemarcelo.com:8004/v1/categories").success(function(data) {
					$scope.categories = data.categories;
				});

				$http.get("http://celinemarcelo.com:8004/v1/languages").success(function(data) {
					$scope.languages = data.languages;
				});


    			$scope.submit = function(file){

    				$scope.showSpinner = true;

    				var authorId, categoryId, languageId, bookId;

    				var authorBody = {
    					'firstName': $scope.firstName,
    					'lastName': $scope.lastName
    				};

    				var categoryBody = {
    					'categoryName': $scope.categoryName
    				};

    				var languageBody = {
    					'language': $scope.language
    				};

    				
					var checkAuthor = $http({
						method: "POST",
						url: "http://celinemarcelo.com:8004/v1/authors", 
						headers: {
							'Content-Type': 'application/json'
						},
						data: authorBody
					}).success(function (data, status) {
						console.log(data);
						authorId = data.id;

						console.log("authorId: " + authorId);
					});

					var checkCategory = $http({
						method: "POST",
						url: "http://celinemarcelo.com:8004/v1/categories", 
						headers: {
							'Content-Type': 'application/json'
						},
						data: categoryBody
					}).success(function (data, status) {
						console.log(data);
						categoryId = data.id;

						console.log("categoryId: " + categoryId);

					});

					var checkLanguage = $http({
						method: "POST",
						url: "http://celinemarcelo.com:8004/v1/languages", 
						headers: {
							'Content-Type': 'application/json'
						},
						data: languageBody
					}).success(function (data, status) {
						console.log(data);
						languageId = data.id;

						console.log("languageId: " + languageId);
					});
					

					$q.all([checkAuthor, checkCategory, checkLanguage]).then(function(){
						var bookBody =  {
							title: $scope.title,
							author: authorId,
							category: categoryId,
							language: languageId,
							releaseDate: $scope.releaseDate
						};

						$http({
							method: "POST",
							url: "http://celinemarcelo.com:8004/v1/books", 
							headers: {
								'Content-Type': 'application/json'
							},
							data: bookBody
						}).success(function (data, status) {
							console.log(data);
							bookId = data.id;

							console.log("bookId: " + bookId);

							console.log($scope.file);

							if ($scope.file != undefined && data.message === "success"){
								Upload.upload({
									url: 'http://celinemarcelo.com:8004/v1/upload/' + bookId, //webAPI exposed to upload the file
									data: {file: $scope.file, id: bookId} //pass file as data, should be user ng-model
								}).success(function (resp) { //upload function returns a promise
									console.log(resp);

									$scope.showSpinner = false;

									if(resp.error_code === 0){ //validate success
									    $scope.coverSuccess = true;
									} else {
										$scope.coverFail = true;

									}
								});
							} else {
								$scope.showSpinner = false;

							}
							


							if (data.message === "Book already exists.") {
								$scope.exists = true;

							} else if (data.message === "success") {
								$scope.success = true;

							} else if (data.message === "There has been a problem with the server."){
								$scope.fail = true;

							}
						});
					});
    			}
			});


			app.controller('bookList', function($scope, $http, $q, $timeout) {
				$scope.showSpinnerTable = true;


    			$http.get("http://celinemarcelo.com:8004/v1/books")
    			.then(function (response) {
    				$scope.showSpinnerTable = false;

    				$scope.books = response.data.books;

    			});
			});


			app.directive('getAuthor', function($http){
				return {
					link: function(scope, element, attrs){
						$http.get('http://celinemarcelo.com:8004/v1/authors/' + scope.x.author)
						.success(function(response){
							console.log(response.author);

							scope.authorName = response.author[0].firstName + " " + response.author[0].lastName;
						});
					},
					template: "<span>{{authorName}}</span>"
				}
			});

			app.directive('getCategory', function($http){
				return {
					link: function(scope, element, attrs){
						$http.get('http://celinemarcelo.com:8004/v1/categories/' + scope.x.category)
						.success(function(response){
							console.log(response.category);

							scope.categoryName = response.category[0].categoryName;
						});
					},
					template: "<span>{{categoryName}}</span>"
				}
			});
		</script>




	</body>
</html>