<html ng-app="app">
	<head>
		<title ng-bind="pageTitle"></title>
		<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
		<link rel="stylesheet" href="http://assets.celinemarcelo.com/projectbookworm/style.css">
		
	</head>

	<body>
		<script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
		<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/angular-ui-router/0.3.1/angular-ui-router.min.js"></script>
		<script src="http://assets.celinemarcelo.com/projectbookworm/ui-bootstrap-tpls-1.3.3.min.js"></script>
		<script src="http://assets.celinemarcelo.com/projectbookworm/ng-file-upload-all.min.js"></script>
		<script src="http://assets.celinemarcelo.com/projectbookworm/ng-file-upload-shim.min.js"></script>
		<script src="http://assets.celinemarcelo.com/projectbookworm/ng-file-upload.min.js"></script>
		<script src="https://cdn.rawgit.com/auth0/angular-jwt/master/dist/angular-jwt.js"></script>



		<nav class="navbar navbar-default navbar-fixed-top Bebas">
	        <div class="container-fluid">
	            <div>
	                <ul class="nav navbar-nav navbar-left">
	                    <li ng-class="{active: activeTab === 'Project Bookworm'}" class="logo">
	                        <a href="#/" style="font-size: 300%">
	                        	WELCOME
	                        </a>
	                    </li>
	                    <li ng-class="{active: activeTab === 'Book List'}" class="logo">
	                        <a href="#books" style="font-size: 200%">BOOKS</a>
	                    </li>
	                </ul>
	                <ul class="nav navbar-nav navbar-right">
	                    <li style="background-color: #4d79ff" class="logo" ng-hide="loggedIn">
	                        <a href="#login" style="font-size: 200%; color:white;">LOGIN</a>
	                    </li>
	                     <li style="background-color: #4d79ff" class="logo" ng-show="loggedIn">
	                        <a href="#account" style="font-size: 200%; color:white;">MY ACCOUNT</a>
	                    </li>
	                </ul>
	            </div>
	        </div>
	    </nav>


		<div ui-view></div>


		
		
		<script>
                  <!-- separste your javascript code from your static html files -->
			var app = angular.module('app', ['ui.router', 'ui.bootstrap', 'ngFileUpload', 'angular-jwt']);

			app.factory('tokenInjector', function ($window){
				return {
					request: function (config){
						if ($window.sessionStorage.token) {
							config.headers['x-session-token'] = $window.sessionStorage.token;
						}

						return config;
					}


				};
			});


			app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', function($stateProvider, $urlRouterProvider, $httpProvider){
  				
  				$httpProvider.interceptors.push('tokenInjector');

  				$stateProvider
  					.state("otherwise", {
  						url: "/",
  						title: "Project Bookworm",
				    	templateUrl: "welcome.htm"
				    })

				    .state("bookList", {
				    	url: "/books",
				    	title: "Book List",
				    	templateUrl: "bookList.htm",
				    	controller: "bookList"
				    })

				    .state("bookDetails", {
				    	url: "/books/:bookId",
				    	title: "Book Details",
				    	templateUrl: "bookDetails.htm",
				    	controller: "bookDetails"
				    })

				    .state("login", {
				    	url: "/login",
				    	title: "Login/Register",
				    	templateUrl: "login.htm",
				    	controller: "login"
				    })

				    .state("account", {
				    	url: "/account",
				    	title: "My Account",
				    	templateUrl: "account.htm",
				    	controller: "account"
				    });


				    $urlRouterProvider.otherwise("/");
			}]);

			app.run(['$rootScope', '$state', '$window', function($rootScope, $state, $window) {
				

				$rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {
					
					if ($window.sessionStorage.token) {
						$rootScope.loggedIn = true;
					} else {
						$rootScope.loggedIn = false;
					}


					if(!$rootScope.loggedIn && toState.name === 'account'){

						$state.go('login');
					}


        			if ($rootScope.loggedIn && toState.name === 'login'){
        				$state.go('account');

        			}
    			});


    			$rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {
        			$rootScope.pageTitle = toState.title;
        			$rootScope.activeTab = toState.title;
    			});
			}]);



			app.controller('bookList', function($scope, $http, $q, Upload, $window) {


				$http.get("http://celinemarcelo.com:8004/v1/books").success(function(data) {
					$scope.books = data.books;
				});

				$http.get("http://celinemarcelo.com:8004/v1/authors").success(function(data) {
					$scope.authors = data.authors;
				});

				$http.get("http://celinemarcelo.com:8004/v1/categories").success(function(data) {
					$scope.categories = data.categories;
				});

				$http.get("http://celinemarcelo.com:8004/v1/languages").success(function(data) {
					$scope.languages = data.languages;
				});


    			$scope.submit = function(file){

    				$scope.showSpinner = true;

    				var authorId, categoryId, languageId, bookId;

    				var authorBody = {
    					'firstName': $scope.firstName,
    					'lastName': $scope.lastName
    				};

    				var categoryBody = {
    					'categoryName': $scope.categoryName
    				};

    				var languageBody = {
    					'language': $scope.language
    				};

    				
					var checkAuthor = $http({
						method: "POST",
						url: "http://celinemarcelo.com:8004/v1/authors", 
						headers: {
							'Content-Type': 'application/json'
						},
						data: authorBody
					}).success(function (data, status) {
						console.log(data);
						authorId = data.id;

						console.log("authorId: " + authorId);
					});

					var checkCategory = $http({
						method: "POST",
						url: "http://celinemarcelo.com:8004/v1/categories", 
						headers: {
							'Content-Type': 'application/json'
						},
						data: categoryBody
					}).success(function (data, status) {
						console.log(data);
						categoryId = data.id;

						console.log("categoryId: " + categoryId);

					});

					var checkLanguage = $http({
						method: "POST",
						url: "http://celinemarcelo.com:8004/v1/languages", 
						headers: {
							'Content-Type': 'application/json'
						},
						data: languageBody
					}).success(function (data, status) {
						console.log(data);
						languageId = data.id;

						console.log("languageId: " + languageId);
					});
					

					$q.all([checkAuthor, checkCategory, checkLanguage]).then(function(){
						var bookBody =  {
							title: $scope.title,
							author: authorId,
							category: categoryId,
							language: languageId,
							releaseDate: $scope.releaseDate
						};

						$http({
							method: "POST",
							url: "http://celinemarcelo.com:8004/v1/books", 
							headers: {
								'Content-Type': 'application/json'
							},
							data: bookBody
						}).success(function (data, status) {
							console.log(data);
							bookId = data.id;

							console.log("bookId: " + bookId);

							console.log($scope.file);

							if ($scope.file != undefined && data.message === "success"){
								Upload.upload({
									url: 'http://celinemarcelo.com:8004/v1/upload/' + bookId, //webAPI exposed to upload the file
									data: {file: $scope.file, id: bookId} //pass file as data, should be user ng-model
								}).success(function (resp) { //upload function returns a promise
									console.log(resp);

									$scope.showSpinner = false;

									if(resp.error_code === 0){ //validate success
									    $scope.coverSuccess = true;
									} else {
										$scope.coverFail = true;

									}
								});
							} else {
								$scope.showSpinner = false;

							}
							


							if (data.message === "Book already exists.") {
								$scope.exists = true;

							} else if (data.message === "success") {
								$scope.success = true;

							} else if (data.message === "There has been a problem with the server."){
								$scope.fail = true;

							}
						});
					});
    			}

    			$scope.showSpinnerTable = true;


    			$http.get("http://celinemarcelo.com:8004/v1/books")
    			.then(function (response) {
    				$scope.showSpinnerTable = false;

    				$scope.books = response.data.books;

    			});
			});

			app.controller('bookDetails', function($scope, $http, $stateParams){
				console.log($stateParams.bookId);

				$scope.bookId = $stateParams.bookId;

				$http.get("http://celinemarcelo.com:8004/v1/books/" + $stateParams.bookId)
				.success(function(response){
					console.log(response);
					$scope.title = response.book[0].title;

					$http.get("http://celinemarcelo.com:8004/v1/authors/" + response.book[0].author)
					.success(function(response){
						console.log(response);
						$scope.authorName = response.author[0].firstName + " " + response.author[0].lastName;
					});

					$http.get("http://celinemarcelo.com:8004/v1/categories/" + response.book[0].category)
					.success(function(response){
						console.log(response);
						$scope.categoryName = response.category[0].categoryName;
					});

					$http.get("http://celinemarcelo.com:8004/v1/languages/" + response.book[0].language)
					.success(function(response){
						console.log(response);
						$scope.language = response.language[0].language;
					});
				});
			});

			app.controller('login', function($scope, $http, $window, $state, $rootScope){
				$scope.newUserTrigger = false;
				$scope.loginTrigger = false;

				$scope.submit = function() {
					$scope.newExists = false;
					$scope.newFail = false;
					$scope.showNewSpinner = true;


					console.log($scope.newPassword);
					console.log($scope.confPassword);


					if ($scope.newPassword != $scope.confPassword) {
						$scope.noMatch = true;
						$scope.showNewSpinner = false;
					} else {
						$scope.noMatch = false;
						console.log("Matches!");

						var body = {
							username: $scope.newUsername,
							password: $scope.newPassword
						}

						$http({
							method: "POST",
							url: "http://celinemarcelo.com:8004/v1/users", 
							headers: {
								'Content-Type': 'application/json'
							},
							data: body
						}).success(function (data, status) {
							console.log(data);

							if (data.message === "User already exists.") {
								$scope.newExists = true;
								$scope.showNewSpinner = false;
							} else if (data.err) {
								$scope.newFail = true;
								$scope.showNewSpinner = false;
							} else {
								$http({
									method: "POST",
									url: "http://celinemarcelo.com:8004/v1/authenticate", 
									headers: {
										'Content-Type': 'application/json'
									},
									data: body
								}).success(function (data, status) {
									console.log(data);

									if (data.message === "Authenticated! Token issued.") {
								   		$window.sessionStorage.token = data.token;

										$scope.showNewSpinner = false;
								   		
								   		$state.go('account');
								   		
									}	

								});

							}
							
						});




					}


				}

				$scope.loginFunc = function() {
					$scope.noUser = false;
					$scope.wrongPass = false;
					$scope.showSpinner = true;


					var body = {
						username: $scope.username,
						password: $scope.password
					} 



					$http({
						method: "POST",
						url: "http://celinemarcelo.com:8004/v1/authenticate", 
						headers: {
							'Content-Type': 'application/json'
						},
						data: body
					}).success(function (data, status) {
						console.log(data);

						if (data.message === "Authenticated! Token issued.") {
					   		$window.sessionStorage.token = data.token;

							$scope.showSpinner = false;
					   		
					   		$state.go('account');
					   		
						} else if (data.message === "Wrong password!") {
							$scope.showSpinner = false;

							$scope.wrongPass = true;
						} else if (data.message === "Username not found.") {
							$scope.showSpinner = false;
							$scope.noUser = true;
						}

					});



				}


			});

			app.controller('account', function($scope, $http, $state, $rootScope, $window, jwtHelper){

				var payload =  jwtHelper.decodeToken($window.sessionStorage.token);
				console.log(payload);

				$scope.username = payload.username;

				$scope.logout = function () {
					delete $window.sessionStorage.token;

					$state.go('otherwise');
				}				

			});

			app.directive('getAuthor', function($http){
				return {
					link: function(scope, element, attrs){
						$http.get('http://celinemarcelo.com:8004/v1/authors/' + scope.x.author)
						.success(function(response){
							console.log(response.author);

							scope.authorName = response.author[0].firstName + " " + response.author[0].lastName;
						});
					},
					template: "<span>{{authorName}}</span>"
				}
			});

			app.directive('getCategory', function($http){
				return {
					link: function(scope, element, attrs){
						$http.get('http://celinemarcelo.com:8004/v1/categories/' + scope.x.category)
						.success(function(response){
							console.log(response.category);

							scope.categoryName = response.category[0].categoryName;
						});
					},
					template: "<span>{{categoryName}}</span>"
				}
			});


		</script>




	</body>
</html>
